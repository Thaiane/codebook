{"version":3,"sources":["App.test.js"],"names":["jest","mock","className","test","render","container","getByText","app","firstChild","expect","toBeInTheDocument","book","toHaveClass","code"],"mappings":"qGAAA,wCAIAA,KAAKC,KAAK,UAAU,kBAAM,gBAAGC,EAAH,EAAGA,UAAH,OAAmB,qBAAKA,UAAWA,EAAhB,sBAC7CF,KAAKC,KAAK,UAAU,kBAAM,gBAAGC,EAAH,EAAGA,UAAH,OAAmB,qBAAKA,UAAWA,EAAhB,sBAE7CC,KAAK,eAAe,WAClB,MAAiCC,YAAO,cAAC,UAAD,KAAhCC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UAEbC,EAAMF,EAAUG,WACtBC,OAAOF,GAAKG,oBAEZ,IAAMC,EAAOL,EAAU,SACvBG,OAAOE,GAAMC,YAAY,cAEzB,IAAMC,EAAOP,EAAU,SACvBG,OAAOI,GAAMD,YAAY","file":"static/js/4.15ce802c.chunk.js","sourcesContent":["import React from \"react\"\nimport { render } from \"@testing-library/react\"\nimport App from \"./App\"\n\njest.mock(\"./Book\", () => ({ className }) => <div className={className}>Book</div>)\njest.mock(\"./Code\", () => ({ className }) => <div className={className}>Code</div>)\n\ntest(\"renders App\", () => {\n  const { container, getByText } = render(<App />)\n\n  const app = container.firstChild\n  expect(app).toBeInTheDocument()\n\n  const book = getByText(/Book/i)\n  expect(book).toHaveClass(\"Box Single\")\n\n  const code = getByText(/Code/i)\n  expect(code).toHaveClass(\"Box Double\")\n})\n"],"sourceRoot":""}