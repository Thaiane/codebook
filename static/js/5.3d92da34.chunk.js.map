{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","Code.test.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","placeholder","html","css","js","jest","mock","test","code","render","Code","className","container","firstChild","expect","toBeInTheDocument","toHaveClass","codepen","getByTitle","toHaveAttribute","not","toHaveTextContent","title","getByText","custom","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"qGAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,E,wCCTHQ,EAAc,CAClBC,KAAK,gBACLC,IAAI,YACJC,GAAG,2CAELC,KAAKC,KAAK,sBAAsB,iBAAO,CAAEL,kBAEzCM,KAAK,oBAAoB,WACvB,IAEMC,EAFgBC,YAAO,cAACC,EAAA,QAAD,CAAMC,UAAU,cAArCC,UAEeC,WACvBC,OAAON,GAAMO,oBACbD,OAAON,GAAMQ,YAAY,OAAQ,MAAO,WAG1CT,KAAK,mBAAmB,WACtB,IAEMU,GAAUC,EAFOT,YAAO,cAACC,EAAA,QAAD,KAAtBQ,YAEmB,WAC3BJ,OAAOG,GAASF,oBAChBD,OAAOG,GAASE,gBAAgB,eAAhC,gBACAL,OAAOG,GAASG,IAAIC,uBAGtBd,KAAK,8BAA8B,WACjC,IAAMe,EAAQ,gBAIRL,GAAUC,EAFOT,YAAO,cAACC,EAAA,QAAD,CAAMY,MAAOA,KAAnCJ,YAEmB,WAC3BJ,OAAOG,GAASF,oBAChBD,OAAOG,GAASE,gBAAgB,eAAhC,oBAA6DG,EAA7D,OACAR,OAAOG,GAASG,IAAIC,uBAGtBd,KAAK,yEAAyE,WAC5E,IAAQgB,EAAcd,YAAO,cAACC,EAAA,QAAD,KAArBa,UAEFrB,EAAOqB,EAAUtB,EAAYC,MACnCY,OAAOZ,GAAMa,oBACbD,OAAOZ,GAAMiB,gBAAgB,YAAa,QAE1C,IAAMhB,EAAMoB,EAAUtB,EAAYE,KAClCW,OAAOX,GAAKY,oBACZD,OAAOX,GAAKgB,gBAAgB,YAAa,OAEzC,IAAMf,EAAKmB,EAAUtB,EAAYG,IACjCU,OAAOV,GAAIW,oBACXD,OAAOV,GAAIe,gBAAgB,YAAa,SAG1CZ,KAAK,qEAAqE,WACxE,IAAMiB,EAAS,CACbtB,KAAK,qBACLC,IAAI,sBACJC,GAAG,kBAGGmB,EAAcd,YAAO,cAACC,EAAA,QD9CjB,SAAwBe,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNpC,EAAQL,OAAO4C,IAAS,GAAMC,SAAQ,SAAU/C,GAC9C,EAAe0C,EAAQ1C,EAAK8C,EAAO9C,OAE5BE,OAAO8C,0BAChB9C,OAAO+C,iBAAiBP,EAAQxC,OAAO8C,0BAA0BF,IAEjEvC,EAAQL,OAAO4C,IAASC,SAAQ,SAAU/C,GACxCE,OAAOC,eAAeuC,EAAQ1C,EAAKE,OAAOa,yBAAyB+B,EAAQ9C,OAKjF,OAAO0C,EC6BsB,IAAUD,KAA/BD,UAEFrB,EAAOqB,EAAUC,EAAOtB,MAC9BY,OAAOZ,GAAMa,oBACbD,OAAOZ,GAAMiB,gBAAgB,YAAa,QAE1C,IAAMhB,EAAMoB,EAAUC,EAAOrB,KAC7BW,OAAOX,GAAKY,oBACZD,OAAOX,GAAKgB,gBAAgB,YAAa,OAEzC,IAAMf,EAAKmB,EAAUC,EAAOpB,IAC5BU,OAAOV,GAAIW,oBACXD,OAAOV,GAAIe,gBAAgB,YAAa","file":"static/js/5.3d92da34.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import React from \"react\"\nimport { render } from \"@testing-library/react\"\nimport Code from \"./Code\"\n\nconst placeholder = {\n  html: `<body></body>`,\n  css: `body { };`,\n  js: `//one-line comment for testing purposes`,\n}\njest.mock(\"./code/placeholder\", () => ({ placeholder }))\n\ntest(\"renders Code box\", () => {\n  const { container } = render(<Code className=\"Box Test\" />)\n\n  const code = container.firstChild\n  expect(code).toBeInTheDocument()\n  expect(code).toHaveClass(\"Code\", \"Box\", \"Test\")\n})\n\ntest(\"renders CodePen\", () => {\n  const { getByTitle } = render(<Code />)\n\n  const codepen = getByTitle(\"codepen\")\n  expect(codepen).toBeInTheDocument()\n  expect(codepen).toHaveAttribute(\"data-prefill\", `{\"title\":\"\"}`)\n  expect(codepen).not.toHaveTextContent()\n})\n\ntest(\"renders CodePen with title\", () => {\n  const title = \"Hello, World!\"\n\n  const { getByTitle } = render(<Code title={title} />)\n\n  const codepen = getByTitle(\"codepen\")\n  expect(codepen).toBeInTheDocument()\n  expect(codepen).toHaveAttribute(\"data-prefill\", `{\"title\":\"${title}\"}`)\n  expect(codepen).not.toHaveTextContent()\n})\n\ntest(\"renders CodePen with default placeholder prefill for html, css and js\", () => {\n  const { getByText } = render(<Code />)\n\n  const html = getByText(placeholder.html)\n  expect(html).toBeInTheDocument()\n  expect(html).toHaveAttribute(\"data-lang\", \"html\")\n\n  const css = getByText(placeholder.css)\n  expect(css).toBeInTheDocument()\n  expect(css).toHaveAttribute(\"data-lang\", \"css\")\n\n  const js = getByText(placeholder.js)\n  expect(js).toBeInTheDocument()\n  expect(js).toHaveAttribute(\"data-lang\", \"js\")\n})\n\ntest(\"renders CodePen with custom provided prefill for html, css and js\", () => {\n  const custom = {\n    html: `<div>welcome</div>`,\n    css: `div {color: purple}`,\n    js: `alert('hello')`,\n  }\n\n  const { getByText } = render(<Code {...custom} />)\n\n  const html = getByText(custom.html)\n  expect(html).toBeInTheDocument()\n  expect(html).toHaveAttribute(\"data-lang\", \"html\")\n\n  const css = getByText(custom.css)\n  expect(css).toBeInTheDocument()\n  expect(css).toHaveAttribute(\"data-lang\", \"css\")\n\n  const js = getByText(custom.js)\n  expect(js).toBeInTheDocument()\n  expect(js).toHaveAttribute(\"data-lang\", \"js\")\n})\n"],"sourceRoot":""}