{"version":3,"sources":["book lazy /^/.*/.js$/ groupOptions: {} namespace object","Book.js","Code.js","App.js","serviceWorker.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","settings","theme","themes","Math","floor","random","length","randomTheme","Footer","year","Date","getFullYear","className","href","target","rel","alt","src","process","Book","useState","content","setContent","page","setPage","useEffect","catch","console","error","title","onClick","body","DEFAULT","Code","html","css","js","data-height","data-editable","data-theme-id","data-border","data-default-tab","data-prefill","data-lang","prefill","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.05199c4f.chunk.js","sourcesContent":["var map = {\n\t\"./0.js\": [\n\t\t19,\n\t\t3\n\t],\n\t\"./1.js\": [\n\t\t20,\n\t\t4\n\t],\n\t\"./2.js\": [\n\t\t21,\n\t\t5\n\t],\n\t\"./3.js\": [\n\t\t22,\n\t\t6\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 16;\nmodule.exports = webpackAsyncContext;","import React, { useEffect, useState } from \"react\"\nimport \"./Book.css\"\nimport \"./BookContent.css\"\n\nconst settings = {\n  index: 0,\n  pages: 3,\n}\n\nfunction randomTheme() {\n  const themes = [\"Circuit\", \"Cogs\"]\n  const random = Math.floor(Math.random() * themes.length)\n  return themes[random]\n}\nconst theme = randomTheme()\n\nfunction Book({ className }) {\n  const [content, setContent] = useState()\n  const [page, setPage] = useState(settings.index)\n  const handlePrevPage = () => {\n    if (0 < page) setPage(page - 1)\n  }\n  const handleNextPage = () => {\n    if (page < settings.pages) setPage(page + 1)\n  }\n\n  useEffect(() => {\n    import(`./book/${page}.js`).then(setContent).catch(console.error)\n  }, [page])\n\n  return (\n    <div className={`Book ${className ? className : \"\"}`}>\n      <nav className=\"Header\">\n        <img alt=\"CodeBook\" title=\"CodeBook\" src={`${process.env.PUBLIC_URL}/android-icon-36x36.png`} />\n        <div className=\"Title\">{content?.title}</div>\n        <div className=\"Navigation\">\n          <button onClick={handlePrevPage}>{\"<\"}</button>\n          <span>\n            {page}/{settings.pages}\n          </span>\n          <button onClick={handleNextPage}>{\">\"}</button>\n        </div>\n      </nav>\n      <div className={`Content Theme-${theme}`}>{content?.body}</div>\n      <Footer />\n    </div>\n  )\n}\n\nfunction Footer() {\n  const year = new Date().getFullYear()\n  return (\n    <footer className=\"Footer\">\n      © 2020—{year} CodeBook\n      <a\n        className=\"Link\"\n        href=\"https://github.com/fernandomachado90/codebook\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img alt=\"GitHub\" src={`${process.env.PUBLIC_URL}/github.png`} />\n        Colabore\n      </a>\n    </footer>\n  )\n}\n\nexport default Book\n","import React from \"react\"\nimport \"./Code.css\"\n\nconst DEFAULT = {\n  html: `<body>\n\n</body>\n`,\n  css: `body {\n  \n};\n`,\n  js: `// Pressione F12 para acessar o Console.\n`,\n}\n\nfunction Code({ title, html, css, js, className }) {\n  if (html === true) html = DEFAULT.html\n  if (css === true) css = DEFAULT.css\n  if (js === true) js = DEFAULT.js\n\n  return (\n    <div className={`Code ${className ? className : \"\"}`}>\n      <div\n        title=\"codepen\"\n        className=\"codepen\"\n        data-height=\"100%\"\n        data-editable=\"true\"\n        data-theme-id=\"1\"\n        data-border=\"none\"\n        data-default-tab=\"html,result\"\n        data-prefill={`{\"title\":\"${title ? title : \"\"}\"}`}\n      >\n        <pre data-lang=\"html\">{html}</pre>\n        <pre data-lang=\"css\">{css}</pre>\n        <pre data-lang=\"js\">{js}</pre>\n      </div>\n    </div>\n  )\n}\n\nexport default Code\n","import React from \"react\"\nimport \"./App.css\"\nimport Book from \"./Book\"\nimport Code from \"./Code\"\n\nconst prefill = {\n  html: true,\n  css: true,\n  js: true,\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Book className=\"Box Single\" />\n      <Code title=\"\" {...prefill} className=\"Box Double\" />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./reset.css\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}